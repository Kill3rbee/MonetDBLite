buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M3'
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'org.junit.platform.gradle.plugin'
//apply plugin: 'maven-publish'

ext.group = 'nl.cwi.monetdb'
ext.packaging = 'jar'
ext.sourceCompatibility = 1.8
ext.targetCompatibility = 1.8
ext.junitPlatformVersion = '1.0.0-M3'
ext.junitJupiterVersion  = '5.0.0-M3'
ext.junit4Version        = '4.12'
ext.junitVintageVersion  = '4.12.0-M3'
ext.log4jVersion         = '2.7'
version = '2.24'
ext.version = version

def urlFile = { url, name ->
    File file = new File("$buildDir/libs/${name}.jar")
    file.parentFile.mkdirs()
    if (!file.exists()) {
        new URL(url).withInputStream { downloadStream ->
            file.withOutputStream { fileOut ->
                fileOut << downloadStream
            }
        }
    }
    files(file.absolutePath)
}

dependencies {
    compile urlFile('https://www.dropbox.com/s/0e1w0vonzeym5hk/monetdb-jdbc-new-' + version + '.jar?dl=1', 'monetdb-jdbc-new-' + version)

    // JUnit Jupiter API and TestEngine implementation
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

    //not using JUnit4 for now
    //testCompile("junit:junit:${junit4Version}")
    //testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")

    //Log using log4j
    testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
    testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")
}

jar {
    manifest {
        attributes 'Description': 'MonetDBJavaLite JAR with JDBC compatibility'
    }
}

shadowJar { //Build instruction to the shadowJar
    manifest {
        inheritFrom project.jar.manifest
    }
    destinationDir = file("./build/shadowJar")
}

junitPlatform { //configurations for JUnit5 tests
    // platformVersion '1.0.0-M3'
    // reportsDir file('build/test-results/junit-platform') default
    logManager 'org.apache.logging.log4j.jul.LogManager'
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.4.1'
}
