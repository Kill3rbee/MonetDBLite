sudo: required

language: java

git:
    depth: 1

branches:
    only:
        - Dec2016Lite-Java

addons:
    apt:
        sources:
            - ubuntu-toolchain-r-test
        packages:
            - oracle-java8-installer
            - gcc-6

services:
    - docker

addons:
    ssh_known_hosts: monetdb.org

before_cache:
    # Clean gradle caches
    - rm -f  $HOME/monetdb-java-lite/.gradle/caches/modules-2/modules-2.lock
    - rm -rf $HOME/monetdb-java-lite/.gradle/caches/*/plugin-resolution/

cache:
    directories:
        - $HOME/monetdb-java-lite/.gradle/caches/
        - $HOME/monetdb-java-lite/.gradle/wrapper/

env:
    global:
        # Ubuntu problems...
        - LANG=en_US.utf8
        - LC_CTYPE=en_US.utf8
        - LC_NUMERIC=en_US.utf8
        - LC_TIME=en_US.utf8
        - LC_COLLATE=en_US.utf8
        - LC_MONETARY=en_US.utf8
        - LC_MESSAGES=en_US.utf8
        - LC_PAPER=en_US.utf8
        - LC_NAME=en_US.utf8
        - LC_ADDRESS=en_US.utf8
        - LC_TELEPHONE=en_US.utf8
        - LC_MEASUREMENT=en_US.utf8
        - LC_IDENTIFICATION=en_US.utf8
        - CC=/usr/bin/gcc-6

before_install:
    # Updating GCC and other libraries
    - sudo apt-get -qy update
    - sudo ln -s /usr/bin/gcc-6 /usr/local/bin/gcc
    - gcc -v
    - sudo apt-get install -qq -y realpath coreutils

install:
    # Disable default "./gradlew assemble" command.
    # See http://stackoverflow.com/a/23416671
    - true

script:
    - jdk_switcher use oraclejdk8
    # Compile for the 3 operative systems! May the God be with us! We will create 3 distinct directories for each compilation
    - cd ..
    - cp -rf MonetDBLite MonetDBLiteMacOS/
    - cp -rf MonetDBLite MonetDBLiteWindows/
    - cd MonetDBLite
    - bash compile.sh linux
    - cd ../MonetDBLiteMacOS
    - docker run -it --rm -v $(pwd):/workdir --privileged=true -e CROSS_TRIPLE=x86_64-apple-darwin -e TRAVIS=1 multiarch/crossbuild bash compile.sh macos
    - cd ../MonetDBLiteWindows
    - docker run -it --rm -v $(pwd):/workdir --privileged=true -e TRAVIS=1 pedrotadim/compilemonetdblite bash compile.sh windows
    # Assemble everything with Gradle, but move the generated binaries first
    - cd ..
    - mv MonetDBLiteMacOS/monetdb-java-lite/src/main/resources/libs/macos/ MonetDBLite/monetdb-java-lite/src/main/resources/libs/
    - mv MonetDBLiteWindows/monetdb-java-lite/src/main/resources/libs/windows/ MonetDBLite/monetdb-java-lite/src/main/resources/libs/ 
    - cd MonetDBLite/monetdb-java-lite
    - ./gradlew -i build
    # Move to the original directory
    - cd ..

after_success:
    # Preparing the RSA key
    - openssl aes-256-cbc -K $encrypted_a16cc492052e_key -iv $encrypted_a16cc492052e_iv -in id_downloads.enc -out id_downloads -d
    # Publish to our repository with rsync, but first copy the header file for the site
    - cp HEADER.html monetdb-java-lite/build/libs/
    - rsync -avz -e "ssh -i id_downloads" monetdb-java-lite/build/libs/ ferreira@monetdb.org:/var/www/html/downloads/Java-Experimental/

notifications:
    email:
        on_success: never # default: change
        on_failure: always # default: always
