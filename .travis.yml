sudo: required

language: java

git:
    depth: 1

branches:
    only:
        - Dec2016Lite-Java

addons:
    apt:
        packages:
            - oracle-java8-installer

services:
    - docker

before_install:
    # Update repository and install additional utilities
    - sudo apt-get -qy update
    - sudo apt-get install -qq -y realpath coreutils

install:
    # Disable default "./gradlew assemble" command.
    - true

script:
    - jdk_switcher use oraclejdk8
    # Compile for the 3 operative systems! May the God be with us! We will create 3 distinct directories for each compilation!
    # We are using Docker containers to protect ourselves from Ubuntu's evil locales! :(
    - cd ..
    - cp -rf MonetDBLite MonetDBLiteMacOSX/
    - cp -rf MonetDBLite MonetDBLiteWindows/
    - cd MonetDBLite
    - docker run -it --rm -v $(pwd):/workdir:Z --privileged=true -e CROSS_TRIPLE=x86_64-linux-gnu -e TRAVIS=1 multiarch/crossbuild bash compile.sh linux
    - cd ../MonetDBLiteMacOSX
    - docker run -it --rm -v $(pwd):/workdir:Z --privileged=true -e CROSS_TRIPLE=x86_64-apple-darwin -e TRAVIS=1 multiarch/crossbuild bash compile.sh macosx
    - cd ../MonetDBLiteWindows
    - docker run -it --rm -v $(pwd):/workdir:Z --privileged=true -e TRAVIS=1 pedrotadim/compilemonetdblite bash compile.sh windows
    # Assemble everything with Gradle, but move the generated binaries first
    - cd ..
    - mv MonetDBLiteMacOSX/monetdb-java-lite/src/main/resources/libs/macosx/ MonetDBLite/monetdb-java-lite/src/main/resources/libs/
    - mv MonetDBLiteWindows/monetdb-java-lite/src/main/resources/libs/windows/ MonetDBLite/monetdb-java-lite/src/main/resources/libs/ 
    - cd MonetDBLite/monetdb-java-lite
    - docker run -it --rm -v $(pwd):/workdir:Z --privileged=true -e TRAVIS=1 pedrotadim/compilemonetdblite bash -c 'export JAVA_HOME=/opt/jdk1.8.0_121 ; ./gradlew -i build; chmod -R 777 build'
    # Move to the original directory and copy the header file
    - cd ..
    - cp HEADER.html monetdb-java-lite/build/libs/

addons:
    ssh_known_hosts: monetdb.org

before_deploy:
    # Preparing the RSA key
    - openssl aes-256-cbc -K $encrypted_a16cc492052e_key -iv $encrypted_a16cc492052e_iv -in id_downloads.enc -out /tmp/id_downloads -d
    - eval "$(ssh-agent -s)"
    - chmod 600 /tmp/id_downloads
    - ssh-add /tmp/id_downloads

deploy:
    provider: script
    skip_cleanup: true
    script: rsync -aqz monetdb-java-lite/build/libs/ ferreira@monetdb.org:/var/www/html/downloads/Java-Experimental/
    on:
        branch: Dec2016Lite-Java

notifications:
    email:
        on_success: never # default: change
        on_failure: always # default: always
